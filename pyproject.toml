[project]
name = "riven"
version = "1.0.0"
description = "Plex torrent streaming through Real Debrid and 3rd party services like Overseerr, Mdblist, etc."
authors = [{ name = "Riven Developers" }]
requires-python = "~=3.13.0"
readme = "README.md"
license = "GPL-3.0"
dependencies = [
    "dill>=0.3.8,<0.4",
    "requests[socks]>=2.32.5,<3",
    "lxml>=5.1.0,<6",
    "pydantic>=2.12.0,<3",
    "fastapi>=0.110.0,<0.111",
    "uvicorn[standard]>=0.30.6,<0.31",
    "apscheduler>=3.10.4,<4",
    "coverage>=7.6.8,<8",
    "cachetools>=5.3.3,<6",
    "loguru>=0.7.2,<0.8",
    "opentelemetry-api>=1.25.0,<2",
    "opentelemetry-sdk>=1.25.0,<2",
    "opentelemetry-exporter-prometheus>=0.46b0,<0.47",
    "prometheus-client>=0.20.0,<0.21",
    "sqlalchemy>=2.0.31,<3",
    "sqla-wrapper>=6.0.0,<7",
    "alembic>=1.13.2,<2",
    "psycopg2-binary>=2.9.9,<3",
    "apprise>=1.8.1,<2",
    "subliminal>=2.2.1,<3",
    "jsonschema>=4.23.0,<5",
    "scalar-fastapi>=1.0.3,<2",
    "psutil>=7.1.0,<8",
    "python-dotenv>=1.0.1,<2",
    "requests-ratelimiter>=0.7.0,<0.8",
    "requests-cache>=1.2.1,<2",
    "kink>=0.8.1,<0.9",
    "bencodepy>=0.9.5,<0.10",
    "plexapi>=4.17.1,<5",
    "pyfuse3>=3.4.0,<4",
    "babel>=2.17.0,<3",
    "httpx[http2]>=0.28.1,<0.29",
    "starlette>=0.37.2",
    "rank-torrent-name>=1.9.3,<2",
    "parsett>=1.8.2,<2",
    "trio-util>=0.8.0",
    "ordered-set>=4.1.0",
]

[dependency-groups]
dev = [
    "pyright>=1.1.352,<2",
    "pyperf>=2.2.0,<3",
    "pytest>=8.3.2,<9",
    "pytest-mock>=3.14.0,<4",
    "responses==0.25.3",
    "pyfakefs>=5.4.1,<6",
    "ruff>=0.13.3,<0.14",
    "isort>=5.10.1,<6",
    "codecov>=2.1.13,<3",
    "testcontainers>=4.8.0,<5",
    "mypy>=1.11.2,<2",
    "requests-mock>=1.12.1,<2",
    "black>=25.9.0,<26",
    "pre-commit>=4.3.0,<5",
]
test = ["pytest>=8.3.2,<9"]

[tool.uv]
package = false
default-groups = [
    "dev",
    "test",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
ignore = [
  "PLR0913", # flask8-bugbear: Too many arguments for a method or function
  "PLR0911", # flask8-bugbear: Too many return statements
  "PLR2004", # flake8-bugbear: Magic value used in comparison
  "S104",    # flake8-bandit: Possible binding to all interfaces
  "S108",    # flake8-bandit: Probable insecure usage of temp file/directory
  "S311",    # flake8-bandit: Standard pseudo-random generators are not suitable for security/cryptographic purposes
  "S101",    # ruff: Ignore assert warnings on tests
  "RET505",  #
  "RET503",  # ruff: Ignore required explicit returns (is this desired?)
  "SLF001",  # private member accessing from pickle
  "B904",    # ruff: ignore raising exceptions from except for the API
]
extend-select = [
  "I",   # isort
  "C90", # mccabe complexity
  "B",   # flake8-bugbear
  "PL",  # pycodestyle
  "S",   # flake8-bandit
  "T10", # flake8-debugger
  "PIE", # flake8-pie
  "T20", # flake8-print
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
]
